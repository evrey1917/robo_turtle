<?xml version="1.0" ?>
<robot name='robot' xmlns:xacro="http://ros.org/wiki/xacro">

    <!--xacro:include filename="$(find monk)/urdf/gazebo.urdf.xacro" /-->
    <!--xacro:include filename="$(find robot_description)/urdf/lidar.urdf.xacro" /-->
    <!--xacro:include filename="$(find robot_description)/urdf/depth.urdf.xacro" /-->

    <xacro:property name="chassis_length" value="0.335"/>
    <xacro:property name="chassis_width" value="0.265"/>
    <xacro:property name="chassis_height" value="0.04"/>
    <xacro:property name="wheel_radius" value="0.033"/>
    <xacro:property name="wheel_thickness" value="0.026"/>
    <xacro:property name="wheel_mass" value="0.05"/>
    <xacro:property name="wheel_offset_x" value="0.226"/>
    <xacro:property name="wheel_offset_y" value="0.1485"/>
    <xacro:property name="wheel_offset_z" value="0.01"/>
    <xacro:property name="caster_wheel_radius" value="0.03"/>
    <xacro:property name="caster_wheel_mass" value="0.01"/>
    <xacro:property name="caster_wheel_offset_x" value="0.075"/>
    <xacro:property name="caster_wheel_offset_z" value="${wheel_offset_z - wheel_radius + caster_wheel_radius}"/>
    <xacro:property name="mass" value="1.0"/>
    
    <!--xacro:property name="chassis_length" value="1.8"/>
    <xacro:property name="chassis_height" value="0.2"/>
    <xacro:property name="chassis_width" value="1.2"/>
    <xacro:property name="wheel_radius" value="0.2"/>
    <xacro:property name="wheel_thickness" value="0.1"/>
    <xacro:property name="wheel_mass" value="0.1"/>
    <xacro:property name="wheel_offset_x" value="1.6"/>
    <xacro:property name="wheel_offset_y" value="0.65"/>
    <xacro:property name="wheel_offset_z" value="0.1"/>
    <xacro:property name="caster_wheel_radius" value="0.1"/>
    <xacro:property name="caster_wheel_mass" value="0.1"/>
    <xacro:property name="caster_wheel_offset_x" value="0.1"/>
    <xacro:property name="caster_wheel_offset_z" value="${wheel_offset_z - wheel_radius + caster_wheel_radius}"/>
    <xacro:property name="mass" value="1.0"/-->
    <xacro:property name="monk_mass" value="0.01"/>
    <xacro:property name="monk_radius" value="0.05"/>
    <xacro:property name="monk_height" value="0.2"/>
    
    <gazebo>
        <plugin
            filename="gz-sim-joint-state-publisher-system"
            name="gz::sim::systems::JointStatePublisher">
        </plugin>

        <plugin
            filename="gz-sim-diff-drive-system"
            name="gz::sim::systems::DiffDrive">
            <left_joint>left_wheel_joint</left_joint>
            <right_joint>right_wheel_joint</right_joint>
            <child_frame_id>robot/base_link</child_frame_id>
            <wheel_separation>${2*wheel_offset_y}</wheel_separation>
            <wheel_radius>${wheel_radius}</wheel_radius>
            <odom_publish_frequency>10</odom_publish_frequency>
        </plugin>
    </gazebo>

    <material name="white">
        <color rgba="1 1 1 1" />
    </material>

    <material name="orange">
        <color rgba="1 0.3 0.1 1"/>
    </material>

    <material name="blue">
        <color rgba="0.2 0.2 1 1"/>
    </material>

    <material name="black">
        <color rgba="0 0 0 1"/>
    </material>

    <material name="red">
        <color rgba="1 0 0 1"/>
    </material>
    
    <material name="kor_1">
        <color rgba="${42/256} ${22/256} ${2/256} 1"/>
    </material>
    
    <material name="kor_2">
        <color rgba="${67/256} ${39/256} ${15/256} 1"/>
    </material>

    <link name="base_link">
    </link>

    <link name="base_footprint">
    </link>
    
    <link name="monk">
        <visual>
            <geometry>
                <!--mesh filename="$(find monk)/source/Sketchfab_2017_11_01_03_49_01.dae" scale="0.1 0.1 0.1"/-->
                <mesh filename="file:///home/evrey/ros2_ws/ex05/monk/source/Sketchfab_2017_11_01_03_49_01.dae" scale="0.2 0.2 0.2"/>
            </geometry>
            <origin rpy="0 0 0" xyz="0 0 0"/>
        </visual>
        <collision>
            <geometry>
                <mesh filename="file:///home/evrey/ros2_ws/ex05/monk/source/Sketchfab_2017_11_01_03_49_01.dae" scale="0.2 0.2 0.2"/>
            </geometry>
            <origin rpy="0 0 0" xyz="0 0 0"/>
        </collision>
        <inertial>
            <origin xyz="0 0 ${monk_height/2}" rpy="0 0 0"/>
            <mass value="${monk_mass}" />
            <inertia ixx="${(1/12) * monk_mass * (3*monk_radius*monk_radius + monk_height*monk_height)}" ixy="0.0" ixz="0.0"
                     iyy="${(1/12) * monk_mass * (3*monk_radius*monk_radius + monk_height*monk_height)}" iyz="0.0"
                     izz="${(1/2) * monk_mass * (monk_radius*monk_radius)}" />
        </inertial>
    </link>
    
    <joint name="monk_joint" type="fixed">
        <parent link="base_link"/>
        <child link="monk"/>
        <origin xyz="${- chassis_length / 3} 0 ${chassis_height - wheel_offset_z - 0.01}" rpy="0 0 ${pi/2}"/>
    </joint>

    <joint name="base_footprint_joint" type="fixed">
        <parent link="base_link"/>
        <child link="base_footprint"/>
        <origin xyz="0 0 ${-chassis_height}" rpy="0 0 0"/>
    </joint>

    <joint name="chassis_joint" type="fixed">
        <parent link="base_link"/>
        <child link="chassis"/>
        <origin xyz="${-wheel_offset_x} 0 ${-wheel_offset_z}"/>
    </joint>

    <link name='chassis'>
    
    <inertial>
        <origin xyz="${chassis_length/2} 0 ${chassis_height/2}" rpy="0 0 0"/>
        <mass value="${mass}" />
        <inertia ixx="${(1/12) * mass * (chassis_width*chassis_width+chassis_height*chassis_height)}" ixy="0.0" ixz="0.0"
                 iyy="${(1/12) * mass * (chassis_length*chassis_length+chassis_height*chassis_height)}" iyz="0.0"
                 izz="${(1/12) * mass * (chassis_length*chassis_length+chassis_width*chassis_width)}" />
    </inertial>
    <visual>
        <origin xyz="${chassis_length/2} 0 ${chassis_height/2}"/>
        <geometry>
            <box size="${chassis_length} ${chassis_width} ${chassis_height}"/>
        </geometry>
        <material name="kor_2"/>
    </visual>
    <collision>
        <origin xyz="${chassis_length/2} 0 ${chassis_height/2}"/>
        <geometry>
            <box size="${chassis_length} ${chassis_width} ${chassis_height}"/>
        </geometry>
    </collision>
    </link>

    <gazebo reference="chassis">
        <material>Gazebo/Orange</material>
    </gazebo>

    <joint name="left_wheel_joint" type="continuous">
        <parent link="base_link"/>
        <child link="left_wheel"/>
        <origin xyz="0 ${wheel_offset_y} 0" rpy="-${pi/2} 0 0" />
        <axis xyz="0 0 1"/>
    </joint>

    <link name="left_wheel">
        <visual>
            <geometry>
                <cylinder radius="${wheel_radius}" length="${wheel_thickness}"/>
            </geometry>
            <material name="kor_1"/>
        </visual>
        <collision>
            <geometry>
                <sphere radius="${wheel_radius}"/>
            </geometry>
        </collision>
        <inertial>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <mass value="${wheel_mass}" />
            <inertia ixx="${(1/12) * wheel_mass * (3*wheel_radius*wheel_radius + wheel_thickness*wheel_thickness)}" ixy="0.0" ixz="0.0"
                     iyy="${(1/12) * wheel_mass * (3*wheel_radius*wheel_radius + wheel_thickness*wheel_thickness)}" iyz="0.0"
                     izz="${(1/2) * wheel_mass * (wheel_radius*wheel_radius)}" />
        </inertial>
    </link>

    <gazebo reference="left_wheel">
        <material>Gazebo/Blue</material>
    </gazebo>

    <joint name="right_wheel_joint" type="continuous">
        <parent link="base_link"/>
        <child link="right_wheel"/>
        <origin xyz="0 ${-wheel_offset_y} 0" rpy="${pi/2} 0 0" />
        <axis xyz="0 0 -1"/>
    </joint>

    <link name="right_wheel">
        <visual>
            <geometry>
                <cylinder radius="${wheel_radius}" length="${wheel_thickness}"/>
            </geometry>
            <material name="kor_1"/>
        </visual>
        <collision>
            <geometry>
                <sphere radius="${wheel_radius}"/>
            </geometry>
        </collision>
        <inertial>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <mass value="${wheel_mass}" />
            <inertia ixx="${(1/12) * wheel_mass * (3*wheel_radius*wheel_radius + wheel_thickness*wheel_thickness)}" ixy="0.0" ixz="0.0"
                     iyy="${(1/12) * wheel_mass * (3*wheel_radius*wheel_radius + wheel_thickness*wheel_thickness)}" iyz="0.0"
                     izz="${(1/2) * wheel_mass * (wheel_radius*wheel_radius)}" />
        </inertial>
    </link>

    <gazebo reference="right_wheel">
        <material>Gazebo/Blue</material>
    </gazebo>

    <joint name="caster_wheel_joint" type="fixed">
        <parent link="chassis"/>
        <child link="caster_wheel"/>
        <origin xyz="${caster_wheel_offset_x} 0 ${caster_wheel_offset_z}"/>
    </joint>


    <link name="caster_wheel">
        <visual>
            <geometry>
                <sphere radius="${caster_wheel_radius}"/>
            </geometry>
            <material name="kor_1"/>
        </visual>
        <collision>
            <geometry>
                <sphere radius="${caster_wheel_radius}"/>
            </geometry>
        </collision>
        <inertial>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <mass value="${caster_wheel_mass}" />
            <inertia ixx="${(2/5) * caster_wheel_mass * (caster_wheel_radius*caster_wheel_radius)}" ixy="0.0" ixz="0.0"
                     iyy="${(2/5) * caster_wheel_mass * (caster_wheel_radius*caster_wheel_radius)}" iyz="0.0"
                     izz="${(2/5) * caster_wheel_mass * (caster_wheel_radius*caster_wheel_radius)}" />
        </inertial>
    </link>

    <gazebo reference="caster_wheel">
        <material>Gazebo/White</material>
        <mu1 value="0.001"/>
        <mu2 value="0.001"/>
    </gazebo>

</robot>
